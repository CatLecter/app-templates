services:
  blacksheep:
    container_name: blacksheep
    build: ./blacksheep_app/
    restart: on-failure
    env_file:
      - ./blacksheep_app/.env
    environment:
      "POSTGRES_HOST": postgres
    ports:
      - "8001:8000"
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy

  litestar:
    container_name: litestar
    build: ./litestar_app/
    restart: on-failure
    env_file:
      - ./litestar_app/.env
    environment:
      "POSTGRES_HOST": postgres
    ports:
      - "8002:8000"
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy

  fastapi:
    container_name: fastapi
    build: ./fastapi_app/
    restart: on-failure
    env_file:
      - ./fastapi_app/.env
    environment:
      "POSTGRES_HOST": postgres
      "STORAGE_URI": postgresql+asyncpg://user:password@postgres:5432/db
    ports:
      - "8000:8000"
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:15.3-bookworm
    env_file:
      - ./db/.env
    ports:
      - "5432:5432"
    networks:
      - net
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "shared_buffers=1GB"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

volumes:
  postgres:

networks:
  net:
    driver: bridge